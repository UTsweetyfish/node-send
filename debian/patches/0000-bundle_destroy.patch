Description: Bundle destroy module as patch.
 The module reverse depends only on this context right now.
 No need to have it packaged.
 Origin: https://github.com/stream-utils/destroy
 Version: 1.0.3
Author: Leo Iannacone <l3on@ubuntu.com>
Forwarded: not-needed
Last-Update: 2014-10-13

--- /dev/null
+++ b/node_modules/destroy/index.js
@@ -0,0 +1,36 @@
+var ReadStream = require('fs').ReadStream
+var Stream = require('stream')
+
+module.exports = function destroy(stream) {
+  if (stream instanceof ReadStream) {
+    return destroyReadStream(stream)
+  }
+
+  if (!(stream instanceof Stream)) {
+    return stream
+  }
+
+  if (typeof stream.destroy === 'function') {
+    stream.destroy()
+  }
+
+  return stream
+}
+
+function destroyReadStream(stream) {
+  stream.destroy()
+
+  if (typeof stream.close === 'function') {
+    // node.js core bug work-around
+    stream.on('open', onopenClose)
+  }
+
+  return stream
+}
+
+function onopenClose() {
+  if (typeof this.fd === 'number') {
+    // actually close down the fd
+    this.close()
+  }
+}
--- /dev/null
+++ b/node_modules/destroy/package.json
@@ -0,0 +1,36 @@
+{
+  "name": "destroy",
+  "description": "destroy a stream if possible",
+  "version": "1.0.3",
+  "author": {
+    "name": "Jonathan Ong",
+    "email": "me@jongleberry.com",
+    "url": "http://jongleberry.com",
+    "twitter": "https://twitter.com/jongleberry"
+  },
+  "contributors": [
+    "Douglas Christopher Wilson <doug@somethingdoug.com>"
+  ],
+  "license": "MIT",
+  "repository": "stream-utils/destroy",
+  "devDependencies": {
+    "istanbul": "0",
+    "mocha": "1"
+  },
+  "scripts": {
+    "test": "mocha --reporter spec",
+    "test-cov": "istanbul cover node_modules/mocha/bin/_mocha -- --reporter dot",
+    "test-travis": "istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --reporter dot"
+  },
+  "files": [
+    "index.js"
+  ],
+  "keywords": [
+    "stream",
+    "streams",
+    "destroy",
+    "cleanup",
+    "leak",
+    "fd"
+  ]
+}
--- /dev/null
+++ b/node_modules/destroy/test/test.js
@@ -0,0 +1,59 @@
+
+var assert = require('assert')
+var fs = require('fs')
+
+var destroy = require('..')
+
+describe('Destroy', function () {
+  it('should destroy a stream', function () {
+    var stream = fs.createReadStream('package.json')
+    assert(!isdestroyed(stream))
+    destroy(stream)
+    assert(isdestroyed(stream))
+  })
+
+  it('should handle falsey values', function () {
+    destroy()
+  })
+
+  describe('ReadStream', function () {
+    it('should not leak fd when called sync to open', function (done) {
+      // this test will timeout on a fd leak
+      var _close = fs.close
+      var _open = fs.open
+      var waitclose = false
+
+      function cleanup() {
+        fs.close = _close
+        fs.open = _open
+      }
+
+      fs.close = function close() {
+        _close.apply(this, arguments)
+        cleanup()
+        done()
+      }
+
+      fs.open = function open() {
+        waitclose = true
+        _open.apply(this, arguments)
+      }
+
+      var stream = fs.createReadStream('package.json')
+      destroy(stream)
+      assert(isdestroyed(stream))
+
+      if (waitclose) {
+        return
+      }
+
+      cleanup()
+      done()
+    })
+  })
+})
+
+function isdestroyed(stream) {
+  // readable for 0.8, destroyed for 0.10+
+  return stream.readable === false || stream.destroyed === true
+}
